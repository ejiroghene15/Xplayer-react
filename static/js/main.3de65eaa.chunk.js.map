{"version":3,"sources":["serviceWorker.js","feature.js","audioctrl.js","index.js"],"names":["Boolean","window","location","hostname","match","songDuration","duration","parseInt","hours","mins","secs","toastr","options","timeOut","AudioCxt","React","createContext","axios","defaults","baseURL","API","console","log","AudioPlayer","props","music_player","document","querySelector","triggerUpload","click","getMp3Data","a","_audio","audio_files","files","fd","FormData","append","Array","from","forEach","val","indx","name","type","saveSong","song","post","then","data","status","updatePlaylist","songs","deleteSong","currentSrc","setState","playlist","warning","fetchSongs","get","catch","err","message","togglePlayer","source","src","paused","play","pause","state","this","Fragment","className","onClick","accept","id","multiple","onChange","bind","controls","length","Provider","value","player","Component","MusicList","useContext","map","key","title","size","data-song-title","data-source","style","wordBreak","download","href","class","TrackBar","useState","playing","setPlaying","loop","setLoop","playingTitle","setPlayingTitle","cl","tracker","time_monitor","song_list","querySelectorAll","onplay","trackTime","onpause","onended","changeSong","setActiveSong","elem","classList","remove","useEffect","addEventListener","e","currtime","currentTarget","currentTime","dataset","songTitle","add","timer","setInterval","isNaN","max","innerHTML","ended","clearInterval","dir","parentNode","nextSibling","previousSibling","childNodes","info","role","icon","faFastBackward","trim","faPause","faPlay","faFastForward","min","flexGrow","ReactDOM","render","StrictMode","getElementById","navigator","serviceWorker","ready","registration","unregister","error"],"mappings":"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","file":"static/js/main.3de65eaa.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","export const songDuration = (duration) => {\r\n\tduration = parseInt(duration);\r\n\tlet hours = parseInt(duration / (60 * 60));\r\n\tlet mins = parseInt((duration % (60 * 60)) / 60);\r\n\tlet secs = parseInt(duration % 60);\r\n\tsecs = secs < 10 ? `0${secs}` : secs;\r\n\treturn (duration =\r\n\t\thours > 0 ? `${hours}:${mins}:${secs}` : `${mins}:${secs}`);\r\n};\r\n\r\n","import React, { Component, useState, useContext, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport {\r\n\tfaFastBackward,\r\n\tfaFastForward,\r\n\tfaPause,\r\n\tfaPlay,\r\n} from \"@fortawesome/free-solid-svg-icons\";\r\nimport { songDuration } from \"./feature\";\r\nimport toastr from \"toastr\";\r\nimport \"boxicons/css/boxicons.min.css\";\r\n\r\ntoastr.options.timeOut = 5000;\r\n\r\nconst AudioCxt = React.createContext();\r\n// axios.defaults.baseURL = \"https://inexus.dev/react_app/xplayer/\";\r\nif (window.location.hostname === \"localhost\") {\r\n\taxios.defaults.baseURL = \"http://localhost/tuts/\";\r\n} else {\r\n\taxios.defaults.baseURL = \"https://celibate.000webhostapp.com/\";\r\n}\r\n\r\nconst API = axios.defaults.baseURL;\r\nconsole.log(API);\r\n\r\nclass AudioPlayer extends Component {\r\n\tconstructor(props) {\r\n\t\tsuper(props);\r\n\t\tthis.state = {\r\n\t\t\tplaylist: [],\r\n\t\t\tmessage: \"Playlist is empty, upload a song\",\r\n\t\t};\r\n\t\tthis.fetchSongs();\r\n\t}\r\n\r\n\tmusic_player = () => document.querySelector(\"#music_player\");\r\n\r\n\ttriggerUpload = () => document.querySelector(\"#upload_song\").click();\r\n\r\n\tgetMp3Data = async () => {\r\n\t\tlet _audio = document.querySelector(\"#upload_song\");\r\n\t\tlet audio_files = _audio.files;\r\n\t\tlet fd = new FormData();\r\n\t\tfd.append(\"action\", \"addsong\");\r\n\r\n\t\tArray.from(audio_files).forEach(async (val, indx) => {\r\n\t\t\tlet { name, type } = _audio.files[indx];\r\n\t\t\tif (type.match(\"audio/\")) {\r\n\t\t\t\tfd.append(`${name}`, _audio.files[indx]);\r\n\t\t\t}\r\n\t\t});\r\n\t\tawait this.saveSong(fd);\r\n\t};\r\n\r\n\tsaveSong = async (song) => {\r\n\t\taxios.post(`song_controller.php`, song).then(({ data }) => {\r\n\t\t\tif (data.status === true) {\r\n\t\t\t\tthis.updatePlaylist(data.songs);\r\n\t\t\t}\r\n\t\t});\r\n\t};\r\n\r\n\tdeleteSong = (song) => {\r\n\t\tlet { currentSrc } = this.music_player();\r\n\t\tif (currentSrc !== `${API}${song}`) {\r\n\t\t\tlet fd = new FormData();\r\n\t\t\tfd.append(\"action\", \"delete\");\r\n\t\t\tfd.append(\"song_name\", song);\r\n\r\n\t\t\taxios.post(`song_controller.php`, fd).then(({ data }) => {\r\n\t\t\t\tif (data.status === true) {\r\n\t\t\t\t\tthis.updatePlaylist(data.songs);\r\n\t\t\t\t} else {\r\n\t\t\t\t\tthis.setState({\r\n\t\t\t\t\t\tplaylist: [],\r\n\t\t\t\t\t});\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t} else {\r\n\t\t\ttoastr.warning(\"You cannot delete the current track playing\");\r\n\t\t}\r\n\t};\r\n\r\n\tfetchSongs = async () => {\r\n\t\taxios\r\n\t\t\t.get(`song_controller.php`)\r\n\t\t\t.then(({ data }) => {\r\n\t\t\t\tif (data.status === true) {\r\n\t\t\t\t\tthis.updatePlaylist(data.songs);\r\n\t\t\t\t}\r\n\t\t\t})\r\n\t\t\t.catch((err) =>\r\n\t\t\t\tthis.setState({ message: \"Sorry, unable to get songs at the moment\" })\r\n\t\t\t);\r\n\t};\r\n\r\n\ttogglePlayer = (source) => {\r\n\t\t/*\r\n\t\t * toggle the play and pause action when a song is clicked on\r\n\t\t */\r\n\t\tconst { src, paused } = this.music_player();\r\n\t\tif (src !== source) {\r\n\t\t\tthis.music_player().src = source;\r\n\t\t\tthis.music_player().play();\r\n\t\t} else {\r\n\t\t\tpaused ? this.music_player().play() : this.music_player().pause();\r\n\t\t}\r\n\t};\r\n\r\n\tupdatePlaylist = (songs) => {\r\n\t\tif (songs !== false) {\r\n\t\t\tthis.setState({\r\n\t\t\t\tplaylist: [...songs],\r\n\t\t\t});\r\n\t\t}\r\n\t};\r\n\r\n\trender() {\r\n\t\tconst { playlist, message } = this.state;\r\n\t\treturn (\r\n\t\t\t<React.Fragment>\r\n\t\t\t\t<section className=\"container-fluid\">\r\n\t\t\t\t\t<button\r\n\t\t\t\t\t\tclassName=\"btn btn-sm btn-dark my-3\"\r\n\t\t\t\t\t\tonClick={this.triggerUpload}\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\tUpload Song\r\n\t\t\t\t\t</button>\r\n\t\t\t\t\t<input\r\n\t\t\t\t\t\ttype=\"file\"\r\n\t\t\t\t\t\taccept=\"audio/*\"\r\n\t\t\t\t\t\tclassName=\"d-none\"\r\n\t\t\t\t\t\tid=\"upload_song\"\r\n\t\t\t\t\t\tmultiple\r\n\t\t\t\t\t\tonChange={this.getMp3Data.bind(this)}\r\n\t\t\t\t\t/>\r\n\t\t\t\t\t<audio controls id=\"music_player\" className=\"d-none\"></audio>\r\n\t\t\t\t\t{playlist.length > 0 ? (\r\n\t\t\t\t\t\t<AudioCxt.Provider\r\n\t\t\t\t\t\t\tvalue={{\r\n\t\t\t\t\t\t\t\tplayer: this.music_player,\r\n\t\t\t\t\t\t\t\ttogglePlayer: this.togglePlayer,\r\n\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t<MusicList playlist={playlist} deleteSong={this.deleteSong} />\r\n\t\t\t\t\t\t\t<TrackBar />\r\n\t\t\t\t\t\t</AudioCxt.Provider>\r\n\t\t\t\t\t) : (\r\n\t\t\t\t\t\t<div>{message}</div>\r\n\t\t\t\t\t)}\r\n\t\t\t\t</section>\r\n\t\t\t</React.Fragment>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nconst MusicList = (props) => {\r\n\tlet { playlist, deleteSong } = props;\r\n\tlet { togglePlayer } = useContext(AudioCxt);\r\n\r\n\treturn (\r\n\t\t<React.Fragment>\r\n\t\t\t<div className=\"list-group animate__animated animate__fadeIn\">\r\n\t\t\t\t{playlist.map(({ title, source, size, duration }, key) => (\r\n\t\t\t\t\t<div className=\"d-flex mb-3\" key={key}>\r\n\t\t\t\t\t\t<div\r\n\t\t\t\t\t\t\tonClick={() => togglePlayer(`${API}${source}`)}\r\n\t\t\t\t\t\t\tclassName=\"list-group-item list-group-item-action border-right-0 sl\"\r\n\t\t\t\t\t\t\tdata-song-title={title}\r\n\t\t\t\t\t\t\tdata-source={`${API}${source}`}\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t<div className=\"d-flex flex-column\">\r\n\t\t\t\t\t\t\t\t<h6 className=\"m-0\" style={{ wordBreak: \"break-word\" }}>\r\n\t\t\t\t\t\t\t\t\t{title}\r\n\t\t\t\t\t\t\t\t</h6>\r\n\t\t\t\t\t\t\t\t<small className=\"align-self-end\">\r\n\t\t\t\t\t\t\t\t\t{songDuration(duration)}\r\n\t\t\t\t\t\t\t\t</small>\r\n\t\t\t\t\t\t\t\t<small>\r\n\t\t\t\t\t\t\t\t\t<b>{size} </b>\r\n\t\t\t\t\t\t\t\t</small>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<section className=\"d-flex justify-content-between flex-column\">\r\n\t\t\t\t\t\t\t<a\r\n\t\t\t\t\t\t\t\tdownload={title}\r\n\t\t\t\t\t\t\t\thref={`${API}${source}`}\r\n\t\t\t\t\t\t\t\tclassName=\"btn btn-sm btn-dark border-left-0\"\r\n\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t<i class=\"bx bxs-download\"></i>\r\n\t\t\t\t\t\t\t</a>\r\n\t\t\t\t\t\t\t<button\r\n\t\t\t\t\t\t\t\tclassName=\"btn btn-sm btn-danger border-left-0\"\r\n\t\t\t\t\t\t\t\tonClick={() => deleteSong(source)}\r\n\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t<i class=\"bx bx-trash\"></i>\r\n\t\t\t\t\t\t\t</button>\r\n\t\t\t\t\t\t</section>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t))}\r\n\t\t\t</div>\r\n\t\t</React.Fragment>\r\n\t);\r\n};\r\n\r\nconst TrackBar = () => {\r\n\tconst { player } = useContext(AudioCxt);\r\n\tlet { paused, src } = player();\r\n\tlet [playing, setPlaying] = useState(false);\r\n\tlet [loop, setLoop] = useState(false);\r\n\tlet [playingTitle, setPlayingTitle] = useState(\"\");\r\n\tlet cl = [\"bg-secondary\", \"text-light\"];\r\n\r\n\tlet tracker = () => document.querySelector(\"#tracker\");\r\n\tlet time_monitor = () => document.querySelector(\"#tm\");\r\n\tlet song_list = () => document.querySelectorAll(\".sl\");\r\n\r\n\tplayer().onplay = () => {\r\n\t\tsetPlaying(true);\r\n\t\tplayer().play();\r\n\t\ttrackTime();\r\n\t};\r\n\r\n\tplayer().onpause = () => {\r\n\t\tsetPlaying(false);\r\n\t\tplayer().pause();\r\n\t};\r\n\r\n\tplayer().onended = () => {\r\n\t\tif (!player().loop) {\r\n\t\t\tchangeSong(\"next\");\r\n\t\t}\r\n\t};\r\n\r\n\tlet setActiveSong = () =>\r\n\t\tsong_list().forEach((elem, indx) => {\r\n\t\t\telem.classList.remove(...cl);\r\n\t\t});\r\n\r\n\tuseEffect(() => {\r\n\t\ttracker().addEventListener(\"input\", (e) => {\r\n\t\t\tlet currtime = e.currentTarget.value;\r\n\t\t\tplayer().currentTime = currtime;\r\n\t\t});\r\n\r\n\t\tsong_list().forEach((elem, indx) => {\r\n\t\t\telem.addEventListener(\"click\", () => {\r\n\t\t\t\tsetActiveSong();\r\n\t\t\t\tsetPlayingTitle(elem.dataset.songTitle);\r\n\t\t\t\telem.classList.add(...cl);\r\n\t\t\t});\r\n\t\t});\r\n\t});\r\n\r\n\tlet repeatSong = () => {\r\n\t\tsetLoop(!loop);\r\n\t\tplayer().loop = !loop;\r\n\t};\r\n\r\n\tlet togglePlayer = () => {\r\n\t\treturn src.trim() !== \"\"\r\n\t\t\t? paused\r\n\t\t\t\t? player().play()\r\n\t\t\t\t: player().pause()\r\n\t\t\t: null;\r\n\t};\r\n\r\n\tlet trackTime = () => {\r\n\t\tlet timer = setInterval(function () {\r\n\t\t\tif (!(isNaN(player().currentTime) || isNaN(player().duration))) {\r\n\t\t\t\ttracker().value = player().currentTime;\r\n\t\t\t\ttracker().max = player().duration;\r\n\r\n\t\t\t\ttime_monitor().innerHTML = `<span>${songDuration(\r\n\t\t\t\t\tplayer().currentTime\r\n\t\t\t\t)}</span> / <span>${songDuration(player().duration)}</span>`;\r\n\r\n\t\t\t\tif (player().ended === true) {\r\n\t\t\t\t\ttime_monitor().innerHTML = `<span>0:00</span> / <span>${songDuration(\r\n\t\t\t\t\t\tplayer().duration\r\n\t\t\t\t\t)}</span>`;\r\n\r\n\t\t\t\t\tclearInterval(timer);\r\n\t\t\t\t\ttracker().value = 0;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}, 1000);\r\n\t};\r\n\r\n\tlet changeSong = (dir) => {\r\n\t\tlet { nextSibling, previousSibling } = document.querySelector(\r\n\t\t\t`.sl[data-song-title='${playingTitle}']`\r\n\t\t).parentNode;\r\n\t\tif (\r\n\t\t\t(dir === \"next\" && nextSibling !== null) ||\r\n\t\t\t(dir === \"prev\" && previousSibling !== null)\r\n\t\t) {\r\n\t\t\tlet elem =\r\n\t\t\t\tdir === \"next\"\r\n\t\t\t\t\t? nextSibling.childNodes[0]\r\n\t\t\t\t\t: previousSibling.childNodes[0];\r\n\t\t\tplayer().src = elem.dataset.source;\r\n\t\t\tsetActiveSong();\r\n\t\t\telem.classList.add(...cl);\r\n\t\t\tsetPlayingTitle(elem.dataset.songTitle);\r\n\t\t\tplayer().play();\r\n\t\t\ttoastr.info(elem.dataset.songTitle, \"Now Playing\");\r\n\t\t}\r\n\t};\r\n\r\n\treturn (\r\n\t\t<React.Fragment>\r\n\t\t\t<div className=\"p-2 bg-dark text-light\">\r\n\t\t\t\t<section>\r\n\t\t\t\t\t{playingTitle !== \"\" ? (\r\n\t\t\t\t\t\t<div className=\"text-center\">\r\n\t\t\t\t\t\t\t<small>\r\n\t\t\t\t\t\t\t\t<b className=\"d-block\">Now Playing</b>\r\n\t\t\t\t\t\t\t\t<p>{playingTitle}</p>\r\n\t\t\t\t\t\t\t</small>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t) : null}\r\n\t\t\t\t</section>\r\n\t\t\t\t<section className=\"d-flex\">\r\n\t\t\t\t\t<div className=\"btn-group\" role=\"group\">\r\n\t\t\t\t\t\t<button\r\n\t\t\t\t\t\t\ttype=\"button\"\r\n\t\t\t\t\t\t\tclassName=\"btn btn-dark\"\r\n\t\t\t\t\t\t\tonClick={() => changeSong(\"prev\")}\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t<FontAwesomeIcon icon={faFastBackward} />\r\n\t\t\t\t\t\t</button>\r\n\t\t\t\t\t\t<button\r\n\t\t\t\t\t\t\ttype=\"button\"\r\n\t\t\t\t\t\t\tclassName=\"btn btn-dark\"\r\n\t\t\t\t\t\t\tonClick={() => togglePlayer()}\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t<FontAwesomeIcon icon={playing ? faPause : faPlay} />\r\n\t\t\t\t\t\t</button>\r\n\t\t\t\t\t\t<button\r\n\t\t\t\t\t\t\ttype=\"button\"\r\n\t\t\t\t\t\t\tclassName=\"btn btn-dark\"\r\n\t\t\t\t\t\t\tonClick={() => changeSong(\"next\")}\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t<FontAwesomeIcon icon={faFastForward} />\r\n\t\t\t\t\t\t</button>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<span className=\"ml-auto mt-1\">\r\n\t\t\t\t\t\t<small\r\n\t\t\t\t\t\t\tclassName={`px-2 py-0 ${loop ? \"btn btn-light\" : \"btn btn-dark\"}`}\r\n\t\t\t\t\t\t\tonClick={() => repeatSong()}\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t<i class=\"bx bx-repeat\"></i>\r\n\t\t\t\t\t\t</small>\r\n\t\t\t\t\t</span>\r\n\t\t\t\t</section>\r\n\t\t\t\t<div className=\"d-flex mt-1\">\r\n\t\t\t\t\t<input\r\n\t\t\t\t\t\tid=\"tracker\"\r\n\t\t\t\t\t\ttype=\"range\"\r\n\t\t\t\t\t\tmin=\"0\"\r\n\t\t\t\t\t\tclassName=\"align-middle\"\r\n\t\t\t\t\t\tstyle={{ flexGrow: 100 }}\r\n\t\t\t\t\t\t// disabled={!playing}\r\n\t\t\t\t\t/>\r\n\r\n\t\t\t\t\t<small id=\"tm\" className=\"align-middle ml-2 font-weight-bold\">\r\n\t\t\t\t\t\t0:00 / 0:00\r\n\t\t\t\t\t</small>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t</React.Fragment>\r\n\t);\r\n};\r\n\r\nexport default AudioPlayer;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport \"animate.css\";\r\nimport \"toastr/build/toastr.css\";\r\nimport \"./index.css\";\r\nimport * as serviceWorker from \"./serviceWorker\";\r\nimport AudioPlayer from \"./audioctrl\";\r\n\r\nReactDOM.render(\r\n\t<React.StrictMode>\r\n\t\t<AudioPlayer />\r\n\t</React.StrictMode>,\r\n\tdocument.getElementById(\"root\")\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}